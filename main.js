!function(){"use strict";class t{constructor(t,e,s){this._title=t.name,this._image=t.link,this._data=t,this._cardSelector=e,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}generateCard(){return this._card=this._getTemplate(),this._likeButton=this._card.querySelector(".card__like-button"),this._trashButton=this._card.querySelector(".card__trash-button"),this._photoCard=this._card.querySelector(".card__photo"),this._setEventListeners(),this._photoCard.src=this._image,this._photoCard.alt=this._title,this._card.querySelector(".card__title").textContent=this._title,this._card}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._clickLike())),this._trashButton.addEventListener("click",(()=>this._clickToRemove())),this._photoCard.addEventListener("click",(()=>this._handleCardClick()))}_clickLike(){this._likeButton.classList.toggle("card__like-button_active")}_clickToRemove(){this._card.remove()}}function e(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}class s{constructor(t){e(this,"_handleEscClose",(t=>{"Escape"===t.key&&this.close()})),e(this,"_handleOverlay",(t=>{t.target.classList.contains("popup")&&this.close()})),this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".popup__close-button")}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose),this._popup.addEventListener("mousedown",this._handleOverlay)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose),this._popup.removeEventListener("mousedown",this._handleOverlay)}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close()))}}class i extends s{constructor(t,e){super(t),this._form=this._popup.querySelector(".popup__form"),this._submitHandler=e,this._inputList=Array.from(this._form.querySelectorAll(".form__input"))}_getInputValues(){const t={};return this._inputList.forEach((e=>{t[e.name]=e.value})),t}setInputValues(t){this._inputList.forEach((e=>{e.value=t[e.name]}))}setEventListeners(){this._form.addEventListener("submit",(t=>{t.preventDefault(),this._submitHandler(this._getInputValues()),this.close()})),super.setEventListeners()}close(){super.close(),this._form.reset()}}class o{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=e,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}enableValidation(){this._formElement.addEventListener("submit",(t=>t.preventDefault())),this._setEventListeners()}_showInputError(t,e){const s=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),s.textContent=e,s.classList.add(this._errorClass)}_hideInputError(t){const e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),e.textContent=""}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}_setEventListeners(){this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput(this._inputList)?this.disableButton():this.enableButton()}hideError(){this._inputList.forEach((t=>{this._hideInputError(t)}))}}const r=document.querySelector(".profile__edit-button"),n=document.querySelector(".profile__add-button"),a={},l=new class{constructor(t){let{nameSelctor:e,jobSelctor:s}=t;this._profileName=document.querySelector(e),this._profileBreed=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileBreed.textContent}}setUserInfo(t,e){this._profileName.textContent=t,this._profileBreed.textContent=e}}({nameSelctor:".profile__name",jobSelctor:".profile__about-me"}),c=new i(".popup_type_profile",(t=>{l.setUserInfo(t.name,t["about-me"])}));function u(e){return new t(e,"#card-template",(()=>{p.open(e.name,e.link)})).generateCard()}const _=new i(".popup_type_cards",(t=>{const e={name:t["place-title"],link:t.image};d.addNewItem(u(e)),_.close()})),p=new class extends s{constructor(t){super(t),this._popupImg=this._popup.querySelector(".popup__img"),this._popupPhotoTitle=this._popup.querySelector(".popup__photo-title")}open(t,e){super.open(),this._popupImg.src=e,this._popupImg.alt="Beautiful view of ".concat(t),this._popupPhotoTitle.textContent=t}}(".popup_type_photo");c.setEventListeners(),_.setEventListeners(),p.setEventListeners();const d=new class{constructor(t,e){let{data:s,renderer:i}=t;this._data=s,this._renderer=i,this._container=document.querySelector(e)}renderer(){this._data.forEach((t=>{this._renderer(t)}))}addInitialItems(t){this._container.append(t)}addNewItem(t){this._container.prepend(t)}}({data:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:t=>{d.addInitialItems(u(t))}},".cards");var h;d.renderer(),h={inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_disable",inputErrorClass:"popup__input_type_error",errorClass:"form__input-error_active"},Array.from(document.querySelectorAll(".popup__form")).forEach((t=>{const e=new o(h,t),s=t.getAttribute("name");a[s]=e,e.enableValidation()})),r.addEventListener("click",(()=>{const t=a["edit-form"];t.hideError(),t.enableButton();const e=l.getUserInfo(),s={name:e.name,"about-me":e.job};c.setInputValues(s),c.open()})),n.addEventListener("click",(()=>{const t=a["add-form"];t.disableButton(),t.hideError(),_.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,